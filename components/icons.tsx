import * as React from "react";

import { IconSvgProps } from "@/types";

export const Logo: React.FC<IconSvgProps> = ({
  size = 36,
  width,
  height,
  ...props
}) => (
  <svg
    fill="none"
    height={size || height}
    viewBox="0 0 32 32"
    width={size || width}
    {...props}
  >
    <path
      clipRule="evenodd"
      d="M17.6482 10.1305L15.8785 7.02583L7.02979 22.5499H10.5278L17.6482 10.1305ZM19.8798 14.0457L18.11 17.1983L19.394 19.4511H16.8453L15.1056 22.5499H24.7272L19.8798 14.0457Z"
      fill="currentColor"
      fillRule="evenodd"
    />
  </svg>
);

export const PkLogo: React.FC<IconSvgProps> = ({
  size = 36,
  width,
  height,
  ...props
}) => (
  <svg
    fill="none"
    height={size || height}
    viewBox="0 0 157 157"
    width={size || width}
    xmlns="http://www.w3.org/2000/svg"
    {...props}
  >
    <g clipPath="url(#clip0_5_8)">
      <path
        d="M78.125 0C62.6733 0 47.5686 4.58195 34.7211 13.1664C21.8735 21.7509 11.86 33.9524 5.94689 48.2279C0.0337896 62.5033 -1.51335 78.2117 1.50112 93.3664C4.51559 108.521 11.9563 122.442 22.8823 133.368C33.8082 144.294 47.7288 151.734 62.8835 154.749C78.0383 157.763 93.7466 156.216 108.022 150.303C122.298 144.39 134.499 134.377 143.084 121.529C151.668 108.681 156.25 93.5767 156.25 78.125C156.25 67.8655 154.229 57.7064 150.303 48.2279C146.377 38.7493 140.622 30.1369 133.368 22.8823C126.113 15.6277 117.501 9.87306 108.022 5.94691C98.5436 2.02076 88.3845 0 78.125 0ZM78.125 146.594C64.5275 146.594 51.2354 142.562 39.9295 135.007C28.6236 127.453 19.8118 116.716 14.6083 104.153C9.40473 91.5908 8.04325 77.7675 10.696 64.4313C13.3487 51.0951 19.8965 38.845 29.5114 29.2302C39.1262 19.6153 51.3763 13.0675 64.7125 10.4148C78.0487 7.76203 91.872 9.12351 104.434 14.327C116.997 19.5306 127.734 28.3424 135.289 39.6483C142.843 50.9542 146.875 64.2463 146.875 77.8438C146.867 96.072 139.62 113.551 126.728 126.437C113.835 139.324 96.3532 146.563 78.125 146.562V146.594Z"
        fill="currentColor"
      />
      <path
        d="M78.125 11.4062C64.9602 11.4062 52.091 15.3101 41.1448 22.6241C30.1987 29.938 21.6672 40.3337 16.6292 52.4964C11.5913 64.6591 10.2731 78.0426 12.8414 90.9545C15.4098 103.866 21.7492 115.727 31.0582 125.036C40.3671 134.344 52.2274 140.684 65.1393 143.252C78.0511 145.821 91.4346 144.502 103.597 139.464C115.76 134.427 126.156 125.895 133.47 114.949C140.784 104.003 144.687 91.1336 144.687 77.9688C144.663 60.3229 137.642 43.4069 125.164 30.9294C112.687 18.4518 95.7708 11.4311 78.125 11.4062Z"
        fill="currentColor"
      />
      <path
        d="M53.0338 51C58.927 51 63.6812 52.6962 67.2963 56.0885C70.9115 59.4808 72.7191 63.9997 72.7191 69.6453C72.7191 75.2909 70.9363 79.7975 67.3706 83.165C63.805 86.5326 59.026 88.2164 53.0338 88.2164H38.8455V103.37C38.8455 104.064 38.5855 104.67 38.0655 105.19C37.5455 105.71 36.9389 105.97 36.2455 105.97H30.5999C29.9066 105.97 29.3 105.71 28.78 105.19C28.26 104.67 28 104.064 28 103.37V80.3422C28 79.6489 28.26 79.0423 28.78 78.5223C29.3 78.0023 29.9066 77.7423 30.5999 77.7423H52.5881C55.9061 77.7423 58.2832 77.0242 59.7193 75.5881C61.1555 74.3005 61.8736 72.3443 61.8736 69.7196C61.8736 67.0949 61.1307 65.0768 59.6451 63.6654C58.1594 62.2541 55.807 61.5484 52.5881 61.5484H30.5999C29.9066 61.5484 29.3 61.2884 28.78 60.7684C28.26 60.2484 28 59.6417 28 58.9484V53.5999C28 52.9066 28.26 52.3 28.78 51.78C29.3 51.26 29.9066 51 30.5999 51H53.0338ZM127.466 101.885C127.764 102.231 127.937 102.652 127.986 103.147C128.036 103.643 127.949 104.113 127.726 104.559C127.504 105.005 127.182 105.351 126.761 105.599C126.34 105.846 125.882 105.97 125.387 105.97H118.33C117.884 105.97 117.475 105.871 117.104 105.673C116.732 105.475 116.423 105.203 116.175 104.856L98.4214 79.3023L91.1415 86.1364V103.37C91.1415 104.064 90.8815 104.67 90.3616 105.19C89.8416 105.71 89.2349 105.97 88.5416 105.97H82.896C82.2027 105.97 81.596 105.71 81.076 105.19C80.556 104.67 80.2961 104.064 80.2961 103.37V82.7193C80.2961 81.927 80.5684 81.3079 81.1132 80.8622L112.164 51.7428C112.659 51.2476 113.253 51 113.947 51H121.969C122.465 51 122.935 51.1486 123.381 51.4457C123.827 51.7428 124.148 52.139 124.347 52.6343C124.545 53.1295 124.594 53.6371 124.495 54.1571C124.396 54.6771 124.148 55.1352 123.752 55.5313L106.37 71.8739L127.466 101.885ZM82.896 69.9425C82.2027 69.9425 81.596 69.6948 81.076 69.1996C80.556 68.7044 80.2961 68.0854 80.2961 67.3425V53.5999C80.2961 52.9066 80.556 52.3 81.076 51.78C81.596 51.26 82.2027 51 82.896 51H88.5416C89.2349 51 89.8416 51.26 90.3616 51.78C90.8815 52.3 91.1415 52.9066 91.1415 53.5999V67.3425C91.1415 68.0854 90.8815 68.7044 90.3616 69.1996C89.8416 69.6948 89.2349 69.9425 88.5416 69.9425H82.896Z"
        fill="#2B88F3"
      />
    </g>
    <defs>
      <clipPath id="clip0_5_8">
        <rect fill="currentColor" height="156.25" width="156.25" />
      </clipPath>
    </defs>
  </svg>
);

export const PKLogoV2: React.FC<IconSvgProps> = ({
  size = 36,
  width,
  height,
  ...props
}) => (
  <svg
    fill="none"
    height={size || height}
    viewBox="0 0 165 165"
    width={size || width}
    xmlns="http://www.w3.org/2000/svg"
    {...props}
  >
    <g clipPath="url(#clip0_12_19)" filter="url(#filter0_d_12_19)">
      <path
        d="M160.25 78.0482C160.25 88.3419 154.412 97.4066 150.724 106.471C147.037 115.536 144.425 126.291 137.358 133.358C130.291 140.425 119.843 142.883 110.471 146.724C101.099 150.565 92.3419 156.25 82.0482 156.25C71.7544 156.25 62.6898 150.412 53.6251 146.724C44.5605 143.037 33.8058 140.425 26.7384 133.358C19.6711 126.291 17.3665 115.843 13.5256 106.471C9.68461 97.0993 4 88.3419 4 78.0482C4 67.7544 9.83825 58.6898 13.5256 49.7788C17.2129 40.8678 19.8247 29.9594 26.8921 22.8921C33.9594 15.8247 44.4068 13.3665 53.7788 9.52557C63.1507 5.68461 71.7544 0 82.0482 0C92.3419 0 101.56 5.83825 110.471 9.52557C119.382 13.2129 130.291 15.8247 137.358 22.8921C144.425 29.9594 146.883 40.4068 150.724 49.7788C154.565 59.1507 160.25 67.7544 160.25 78.0482Z"
        fill="currentColor"
      />
      <path
        d="M57.0338 51C62.927 51 67.6812 52.6962 71.2963 56.0885C74.9115 59.4808 76.7191 63.9997 76.7191 69.6453C76.7191 75.2909 74.9363 79.7975 71.3706 83.165C67.805 86.5326 63.026 88.2164 57.0338 88.2164H42.8455V103.37C42.8455 104.064 42.5855 104.67 42.0655 105.19C41.5455 105.71 40.9389 105.97 40.2455 105.97H34.5999C33.9066 105.97 33.3 105.71 32.78 105.19C32.26 104.67 32 104.064 32 103.37V80.3422C32 79.6489 32.26 79.0423 32.78 78.5223C33.3 78.0023 33.9066 77.7423 34.5999 77.7423H56.5881C59.9061 77.7423 62.2832 77.0242 63.7193 75.5881C65.1555 74.3005 65.8736 72.3443 65.8736 69.7196C65.8736 67.0949 65.1307 65.0768 63.6451 63.6654C62.1594 62.2541 59.807 61.5484 56.5881 61.5484H34.5999C33.9066 61.5484 33.3 61.2884 32.78 60.7684C32.26 60.2484 32 59.6417 32 58.9484V53.5999C32 52.9066 32.26 52.3 32.78 51.78C33.3 51.26 33.9066 51 34.5999 51H57.0338ZM131.466 101.885C131.764 102.231 131.937 102.652 131.986 103.147C132.036 103.643 131.949 104.113 131.726 104.559C131.504 105.005 131.182 105.351 130.761 105.599C130.34 105.846 129.882 105.97 129.387 105.97H122.33C121.884 105.97 121.475 105.871 121.104 105.673C120.732 105.475 120.423 105.203 120.175 104.856L102.421 79.3023L95.1415 86.1364V103.37C95.1415 104.064 94.8815 104.67 94.3616 105.19C93.8416 105.71 93.2349 105.97 92.5416 105.97H86.896C86.2027 105.97 85.596 105.71 85.076 105.19C84.556 104.67 84.2961 104.064 84.2961 103.37V82.7193C84.2961 81.927 84.5684 81.3079 85.1132 80.8622L116.164 51.7428C116.659 51.2476 117.253 51 117.947 51H125.969C126.465 51 126.935 51.1486 127.381 51.4457C127.827 51.7428 128.148 52.139 128.347 52.6343C128.545 53.1295 128.594 53.6371 128.495 54.1571C128.396 54.6771 128.148 55.1352 127.752 55.5313L110.37 71.8739L131.466 101.885ZM86.896 69.9425C86.2027 69.9425 85.596 69.6948 85.076 69.1996C84.556 68.7044 84.2961 68.0854 84.2961 67.3425V53.5999C84.2961 52.9066 84.556 52.3 85.076 51.78C85.596 51.26 86.2027 51 86.896 51H92.5416C93.2349 51 93.8416 51.26 94.3616 51.78C94.8815 52.3 95.1415 52.9066 95.1415 53.5999V67.3425C95.1415 68.0854 94.8815 68.7044 94.3616 69.1996C93.8416 69.6948 93.2349 69.9425 92.5416 69.9425H86.896Z"
        fill="#0059BE"
      />
    </g>
    <defs>
      <filter
        colorInterpolationFilters="sRGB"
        filterUnits="userSpaceOnUse"
        height="164.25"
        id="filter0_d_12_19"
        width="164.25"
        x="0"
        y="0"
      >
        <feFlood floodOpacity="0" result="BackgroundImageFix" />
        <feColorMatrix
          in="SourceAlpha"
          result="hardAlpha"
          type="matrix"
          values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
        />
        <feOffset dy="4" />
        <feGaussianBlur stdDeviation="2" />
        <feComposite in2="hardAlpha" operator="out" />
        <feColorMatrix
          type="matrix"
          values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0"
        />
        <feBlend
          in2="BackgroundImageFix"
          mode="normal"
          result="effect1_dropShadow_12_19"
        />
        <feBlend
          in="SourceGraphic"
          in2="effect1_dropShadow_12_19"
          mode="normal"
          result="shape"
        />
      </filter>
      <clipPath id="clip0_12_19">
        <rect
          fill="white"
          height="156.25"
          transform="translate(4)"
          width="156.25"
        />
      </clipPath>
    </defs>
  </svg>
);

export const DiscordIcon: React.FC<IconSvgProps> = ({
  size = 24,
  width,
  height,
  ...props
}) => {
  return (
    <svg
      height={size || height}
      viewBox="0 0 24 24"
      width={size || width}
      {...props}
    >
      <path
        d="M14.82 4.26a10.14 10.14 0 0 0-.53 1.1 14.66 14.66 0 0 0-4.58 0 10.14 10.14 0 0 0-.53-1.1 16 16 0 0 0-4.13 1.3 17.33 17.33 0 0 0-3 11.59 16.6 16.6 0 0 0 5.07 2.59A12.89 12.89 0 0 0 8.23 18a9.65 9.65 0 0 1-1.71-.83 3.39 3.39 0 0 0 .42-.33 11.66 11.66 0 0 0 10.12 0q.21.18.42.33a10.84 10.84 0 0 1-1.71.84 12.41 12.41 0 0 0 1.08 1.78 16.44 16.44 0 0 0 5.06-2.59 17.22 17.22 0 0 0-3-11.59 16.09 16.09 0 0 0-4.09-1.35zM8.68 14.81a1.94 1.94 0 0 1-1.8-2 1.93 1.93 0 0 1 1.8-2 1.93 1.93 0 0 1 1.8 2 1.93 1.93 0 0 1-1.8 2zm6.64 0a1.94 1.94 0 0 1-1.8-2 1.93 1.93 0 0 1 1.8-2 1.92 1.92 0 0 1 1.8 2 1.92 1.92 0 0 1-1.8 2z"
        fill="currentColor"
      />
    </svg>
  );
};

export const TwitterIcon: React.FC<IconSvgProps> = ({
  size = 24,
  width,
  height,
  ...props
}) => {
  return (
    <svg
      height={size || height}
      viewBox="0 0 24 24"
      width={size || width}
      {...props}
    >
      <path
        d="M19.633 7.997c.013.175.013.349.013.523 0 5.325-4.053 11.461-11.46 11.461-2.282 0-4.402-.661-6.186-1.809.324.037.636.05.973.05a8.07 8.07 0 0 0 5.001-1.721 4.036 4.036 0 0 1-3.767-2.793c.249.037.499.062.761.062.361 0 .724-.05 1.061-.137a4.027 4.027 0 0 1-3.23-3.953v-.05c.537.299 1.16.486 1.82.511a4.022 4.022 0 0 1-1.796-3.354c0-.748.199-1.434.548-2.032a11.457 11.457 0 0 0 8.306 4.215c-.062-.3-.1-.611-.1-.923a4.026 4.026 0 0 1 4.028-4.028c1.16 0 2.207.486 2.943 1.272a7.957 7.957 0 0 0 2.556-.973 4.02 4.02 0 0 1-1.771 2.22 8.073 8.073 0 0 0 2.319-.624 8.645 8.645 0 0 1-2.019 2.083z"
        fill="currentColor"
      />
    </svg>
  );
};

export const GithubIcon: React.FC<IconSvgProps> = ({
  size = 24,
  width,
  height,
  ...props
}) => {
  return (
    <svg
      height={size || height}
      viewBox="0 0 24 24"
      width={size || width}
      {...props}
    >
      <path
        clipRule="evenodd"
        d="M12.026 2c-5.509 0-9.974 4.465-9.974 9.974 0 4.406 2.857 8.145 6.821 9.465.499.09.679-.217.679-.481 0-.237-.008-.865-.011-1.696-2.775.602-3.361-1.338-3.361-1.338-.452-1.152-1.107-1.459-1.107-1.459-.905-.619.069-.605.069-.605 1.002.07 1.527 1.028 1.527 1.028.89 1.524 2.336 1.084 2.902.829.091-.645.351-1.085.635-1.334-2.214-.251-4.542-1.107-4.542-4.93 0-1.087.389-1.979 1.024-2.675-.101-.253-.446-1.268.099-2.64 0 0 .837-.269 2.742 1.021a9.582 9.582 0 0 1 2.496-.336 9.554 9.554 0 0 1 2.496.336c1.906-1.291 2.742-1.021 2.742-1.021.545 1.372.203 2.387.099 2.64.64.696 1.024 1.587 1.024 2.675 0 3.833-2.33 4.675-4.552 4.922.355.308.675.916.675 1.846 0 1.334-.012 2.41-.012 2.737 0 .267.178.577.687.479C19.146 20.115 22 16.379 22 11.974 22 6.465 17.535 2 12.026 2z"
        fill="currentColor"
        fillRule="evenodd"
      />
    </svg>
  );
};

export const MoonFilledIcon = ({
  size = 24,
  width,
  height,
  ...props
}: IconSvgProps) => (
  <svg
    aria-hidden="true"
    focusable="false"
    height={size || height}
    role="presentation"
    viewBox="0 0 24 24"
    width={size || width}
    {...props}
  >
    <path
      d="M21.53 15.93c-.16-.27-.61-.69-1.73-.49a8.46 8.46 0 01-1.88.13 8.409 8.409 0 01-5.91-2.82 8.068 8.068 0 01-1.44-8.66c.44-1.01.13-1.54-.09-1.76s-.77-.55-1.83-.11a10.318 10.318 0 00-6.32 10.21 10.475 10.475 0 007.04 8.99 10 10 0 002.89.55c.16.01.32.02.48.02a10.5 10.5 0 008.47-4.27c.67-.93.49-1.519.32-1.79z"
      fill="currentColor"
    />
  </svg>
);

export const SunFilledIcon = ({
  size = 24,
  width,
  height,
  ...props
}: IconSvgProps) => (
  <svg
    aria-hidden="true"
    focusable="false"
    height={size || height}
    role="presentation"
    viewBox="0 0 24 24"
    width={size || width}
    {...props}
  >
    <g fill="currentColor">
      <path d="M19 12a7 7 0 11-7-7 7 7 0 017 7z" />
      <path d="M12 22.96a.969.969 0 01-1-.96v-.08a1 1 0 012 0 1.038 1.038 0 01-1 1.04zm7.14-2.82a1.024 1.024 0 01-.71-.29l-.13-.13a1 1 0 011.41-1.41l.13.13a1 1 0 010 1.41.984.984 0 01-.7.29zm-14.28 0a1.024 1.024 0 01-.71-.29 1 1 0 010-1.41l.13-.13a1 1 0 011.41 1.41l-.13.13a1 1 0 01-.7.29zM22 13h-.08a1 1 0 010-2 1.038 1.038 0 011.04 1 .969.969 0 01-.96 1zM2.08 13H2a1 1 0 010-2 1.038 1.038 0 011.04 1 .969.969 0 01-.96 1zm16.93-7.01a1.024 1.024 0 01-.71-.29 1 1 0 010-1.41l.13-.13a1 1 0 011.41 1.41l-.13.13a.984.984 0 01-.7.29zm-14.02 0a1.024 1.024 0 01-.71-.29l-.13-.14a1 1 0 011.41-1.41l.13.13a1 1 0 010 1.41.97.97 0 01-.7.3zM12 3.04a.969.969 0 01-1-.96V2a1 1 0 012 0 1.038 1.038 0 01-1 1.04z" />
    </g>
  </svg>
);

export const HeartFilledIcon = ({
  size = 24,
  width,
  height,
  ...props
}: IconSvgProps) => (
  <svg
    aria-hidden="true"
    focusable="false"
    height={size || height}
    role="presentation"
    viewBox="0 0 24 24"
    width={size || width}
    {...props}
  >
    <path
      d="M12.62 20.81c-.34.12-.9.12-1.24 0C8.48 19.82 2 15.69 2 8.69 2 5.6 4.49 3.1 7.56 3.1c1.82 0 3.43.88 4.44 2.24a5.53 5.53 0 0 1 4.44-2.24C19.51 3.1 22 5.6 22 8.69c0 7-6.48 11.13-9.38 12.12Z"
      fill="currentColor"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={1.5}
    />
  </svg>
);

export const SearchIcon = (props: IconSvgProps) => (
  <svg
    aria-hidden="true"
    fill="none"
    focusable="false"
    height="1em"
    role="presentation"
    viewBox="0 0 24 24"
    width="1em"
    {...props}
  >
    <path
      d="M11.5 21C16.7467 21 21 16.7467 21 11.5C21 6.25329 16.7467 2 11.5 2C6.25329 2 2 6.25329 2 11.5C2 16.7467 6.25329 21 11.5 21Z"
      stroke="currentColor"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth="2"
    />
    <path
      d="M22 22L20 20"
      stroke="currentColor"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth="2"
    />
  </svg>
);

export const LinkedinIcon: React.FC<IconSvgProps> = ({
  size = 24,
  width,
  height,
  ...props
}) => (
  <svg
    fill="none"
    height={size || height}
    viewBox="0 0 50 50"
    width={size || width}
    xmlns="http://www.w3.org/2000/svg"
    {...props}
  >
    <path
      d="M41,4H9C6.24,4,4,6.24,4,9v32c0,2.76,2.24,5,5,5h32c2.76,0,5-2.24,5-5V9C46,6.24,43.76,4,41,4z M17,20v19h-6V20H17z M11,14.47c0-1.4,1.2-2.47,3-2.47s2.93,1.07,3,2.47c0,1.4-1.12,2.53-3,2.53C12.2,17,11,15.87,11,14.47z M39,39h-6c0,0,0-9.26,0-10 c0-2-1-4-3.5-4.04h-0.08C27,24.96,26,27.02,26,29c0,0.91,0,10,0,10h-6V20h6v2.56c0,0,1.93-2.56,5.81-2.56 c3.97,0,7.19,2.73,7.19,8.26V39z"
      fill="currentColor"
    />
  </svg>
);

export const NextUILogo: React.FC<IconSvgProps> = (props) => {
  const { width, height = 40 } = props;

  return (
    <svg
      fill="none"
      height={height}
      viewBox="0 0 161 32"
      width={width}
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    >
      <path
        className="fill-black dark:fill-white"
        d="M55.6827 5V26.6275H53.7794L41.1235 8.51665H40.9563V26.6275H39V5H40.89L53.5911 23.1323H53.7555V5H55.6827ZM67.4831 26.9663C66.1109 27.0019 64.7581 26.6329 63.5903 25.9044C62.4852 25.185 61.6054 24.1633 61.0537 22.9582C60.4354 21.5961 60.1298 20.1106 60.1598 18.6126C60.132 17.1113 60.4375 15.6228 61.0537 14.2563C61.5954 13.0511 62.4525 12.0179 63.5326 11.268C64.6166 10.5379 65.8958 10.16 67.1986 10.1852C68.0611 10.1837 68.9162 10.3468 69.7187 10.666C70.5398 10.9946 71.2829 11.4948 71.8992 12.1337C72.5764 12.8435 73.0985 13.6889 73.4318 14.6152C73.8311 15.7483 74.0226 16.9455 73.9968 18.1479V19.0773H63.2262V17.4194H72.0935C72.1083 16.4456 71.8952 15.4821 71.4714 14.6072C71.083 13.803 70.4874 13.1191 69.7472 12.6272C68.9887 12.1348 68.1022 11.8812 67.2006 11.8987C66.2411 11.8807 65.3005 12.1689 64.5128 12.7223C63.7332 13.2783 63.1083 14.0275 62.6984 14.8978C62.2582 15.8199 62.0314 16.831 62.0352 17.8546V18.8476C62.009 20.0078 62.2354 21.1595 62.6984 22.2217C63.1005 23.1349 63.7564 23.9108 64.5864 24.4554C65.4554 24.9973 66.4621 25.2717 67.4831 25.2448C68.1676 25.2588 68.848 25.1368 69.4859 24.8859C70.0301 24.6666 70.5242 24.3376 70.9382 23.919C71.3183 23.5345 71.6217 23.0799 71.8322 22.5799L73.5995 23.1604C73.3388 23.8697 72.9304 24.5143 72.4019 25.0506C71.8132 25.6529 71.1086 26.1269 70.3314 26.4434C69.4258 26.8068 68.4575 26.9846 67.4831 26.9663V26.9663ZM78.8233 10.4075L82.9655 17.325L87.1076 10.4075H89.2683L84.1008 18.5175L89.2683 26.6275H87.103L82.9608 19.9317L78.8193 26.6275H76.6647L81.7711 18.5169L76.6647 10.4062L78.8233 10.4075ZM99.5142 10.4075V12.0447H91.8413V10.4075H99.5142ZM94.2427 6.52397H96.1148V22.3931C96.086 22.9446 96.2051 23.4938 96.4597 23.9827C96.6652 24.344 96.9805 24.629 97.3589 24.7955C97.7328 24.9548 98.1349 25.0357 98.5407 25.0332C98.7508 25.0359 98.9607 25.02 99.168 24.9857C99.3422 24.954 99.4956 24.9205 99.6283 24.8853L100.026 26.5853C99.8062 26.6672 99.5805 26.7327 99.3511 26.7815C99.0274 26.847 98.6977 26.8771 98.3676 26.8712C97.6854 26.871 97.0119 26.7156 96.3973 26.4166C95.7683 26.1156 95.2317 25.6485 94.8442 25.0647C94.4214 24.4018 94.2097 23.6242 94.2374 22.8363L94.2427 6.52397ZM118.398 5H120.354V19.3204C120.376 20.7052 120.022 22.0697 119.328 23.2649C118.644 24.4235 117.658 25.3698 116.477 26.0001C115.168 26.6879 113.708 27.0311 112.232 26.9978C110.759 27.029 109.302 26.6835 107.996 25.9934C106.815 25.362 105.827 24.4161 105.141 23.2582C104.447 22.0651 104.092 20.7022 104.115 19.319V5H106.08V19.1831C106.061 20.2559 106.324 21.3147 106.843 22.2511C107.349 23.1459 108.094 23.8795 108.992 24.3683C109.993 24.9011 111.111 25.1664 112.242 25.139C113.373 25.1656 114.493 24.9003 115.495 24.3683C116.395 23.8815 117.14 23.1475 117.644 22.2511C118.16 21.3136 118.421 20.2553 118.402 19.1831L118.398 5ZM128 5V26.6275H126.041V5H128Z"
      />
      <path
        className="fill-black dark:fill-white"
        d="M23.5294 0H8.47059C3.79241 0 0 3.79241 0 8.47059V23.5294C0 28.2076 3.79241 32 8.47059 32H23.5294C28.2076 32 32 28.2076 32 23.5294V8.47059C32 3.79241 28.2076 0 23.5294 0Z"
      />
      <path
        className="fill-white dark:fill-black"
        d="M17.5667 9.21729H18.8111V18.2403C18.8255 19.1128 18.6 19.9726 18.159 20.7256C17.7241 21.4555 17.0968 22.0518 16.3458 22.4491C15.5717 22.8683 14.6722 23.0779 13.6473 23.0779C12.627 23.0779 11.7286 22.8672 10.9521 22.4457C10.2007 22.0478 9.5727 21.4518 9.13602 20.7223C8.6948 19.9705 8.4692 19.1118 8.48396 18.2403V9.21729H9.72854V18.1538C9.71656 18.8298 9.88417 19.4968 10.2143 20.0868C10.5362 20.6506 11.0099 21.1129 11.5814 21.421C12.1689 21.7448 12.8576 21.9067 13.6475 21.9067C14.4374 21.9067 15.1272 21.7448 15.7169 21.421C16.2895 21.1142 16.7635 20.6516 17.0844 20.0868C17.4124 19.4961 17.5788 18.8293 17.5667 18.1538V9.21729ZM23.6753 9.21729V22.845H22.4309V9.21729H23.6753Z"
      />
    </svg>
  );
};
